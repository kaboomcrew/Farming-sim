<!DOCTYPE html>
<html>

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width">
  <title>HTML Template</title>
  <link href="style.css" rel="stylesheet" type="text/css" />
</head>
<style>
    .PatatoPlant {
      position: relative;
        height: 200px;
        width: 200px;
    }
    .PPStem1 {
        position: absolute;    
        bottom: 0;
        left: 50%;
        transform: translateX(-50%);
        height: 10px;
        width: 12px;
        background-color: rgb(0, 184, 0);
        border-right: rgb(0, 131, 0) 5px solid;
        border-top-right-radius: 25px;
        border-top-left-radius: 25px;
        box-shadow: 2px 2px;
    }
    .LeafForward {
      position: absolute;
      width: 40px;
      height: 30px;
      left: 25%;
      bottom: 110px;
      background-color: green;
      border-bottom-left-radius: 25px;
      border-top-left-radius: 40px;
      border-bottom-right-radius: 10px;
      border-top-right-radius: 10px;
      border-bottom: lightgreen solid 1px;
      border-left: lightgreen solid 1px;
      box-shadow: 2px 2px;
    }
    .LeafBackwards {
      position: absolute;
      width: 40px;
      height: 30px;
      right: 25%;
      bottom: 110px;
      background-color: green;
      border-bottom-left-radius: 10px;
      border-top-left-radius: 10px;
      border-bottom-right-radius: 25px;
      border-top-right-radius: 40px;
      border-bottom: lightgreen solid 1px;
      border-left: lightgreen solid 1px;
      box-shadow: 2px 2px;
    }
    .Potato {
      position: absolute;
      bottom: 0px;
      left: 50%;
      transform: translateX(-50%);
      width: 30px;
      height: 20px;
      border-top-left-radius: 50px;
      border-top-right-radius: 50px;
      background-color: rgb(149, 105, 59);
      z-index: 1;
      border-left: rgb(164, 124, 82) solid 5px;
      box-shadow: 2px 2px;
    }
    .Container {
      align-items: center;
      height: 500px;
      width: 100%;
    }
    .Plot {
      position: relative;
        height: 210px;
        width: 200px;
        background-color: rgb(75, 58, 48);
        border-bottom: rgb(101, 87, 84) 15px solid;
        align-items: center;
    }
</style>
<body>
  <p id="OutputText">Hi</p>
  <div id="Container"></div>

  <div class="PatatoPlant" style="display: none;" id="CopyablePatatoPlant">
    <div class="PPLVL1" style="visibility: hidden;">
      <div class="PPStem1"></div>
    </div>
    <div class="PPLVL2" style="visibility: hidden;">
      <div class="PPStem1" style="height: 50px;"></div>
    </div>
    <div class="PPLVL3" style="visibility: hidden;">
      <div class="Potato"></div>
      <div class="PPStem1" style="height: 150px;"></div>
      <div class="LeafForward"></div>
      <div class="LeafBackwards" style="bottom: 75px;"></div>
    </div>
  </div>

  <div id="Farms">

    <div id="Plot1" class="Plot">
      <div id="PlantContainer"></div>
      <span>
        <button onclick="Grow(this.parentElement.parentElement.id, this, this.parentElement.parentElement.firstChild)">Grow</button>
        <button>Upgrade</button>
      </span>
    </div>

    <div id="Plot2" class="Plot">
      <span>
        <button onclick="Grow(this.parentElement.parentElement.id, this)">Grow</button>
        <button>Upgrade</button>
      </span>
    </div>

  </div>

  <script>
    const CopyablePatatoPlant = document.getElementById("CopyablePatatoPlant");

    let PlotData = [];

    function AddPlotToData(ID) {
      let DataString = ID.toString() + " 1 false"; // id, how many plants can grow on that tile, if somethings growing on it // 
      PlotData.push(DataString);
    }

    const Farms = document.getElementById("Farms");
if (Farms) { 
  const Farms2 = Farms.children; 
  for (let i = 0; i < Farms2.length; i++) { 
    const Farm = Farms2[i];
    AddPlotToData(Farm.id); 
  }
} else {}



    function Grow(Plot, Button) {
      let PlotNumInList = Number(Plot.replace("Plot", "")) - 1;
      document.getElementById("OutputText").innerHTML = PlotData

      let PlotInfo = PlotData[PlotNumInList].split(" ");
      if (PlotInfo[2] == "false") {

        PlotInfo[2] = PlotInfo[2].replace("false", "true");

        let ReturningString = PlotInfo[0] + " " + PlotInfo[1] + " " + PlotInfo[2];
        PlotData[PlotNumInList] = ReturningString;


        document.getElementById("OutputText").innerHTML = PlotInfo;

        const NewPatato = CopyablePatatoPlant.cloneNode(true);
      NewPatato.style.display = "block"; 
      document.getElementById(Plot).appendChild(NewPatato);
      const children = NewPatato.children;

      for (let i = 0; i < children.length; i++) {
        const child = children[i];
        setTimeout(() => {
          child.style.visibility = "visible";
          if (i == (children.length - 1)) {
          Button.innerHTML = "Sell";

          PlotInfo[2] = PlotInfo[2].replace("true", "sell");

        let ReturningString = PlotInfo[0] + " " + PlotInfo[1] + " " + PlotInfo[2];
        PlotData[PlotNumInList] = ReturningString;
        }
        }, i * 3000); 
      }
      } else if (PlotInfo[2] == "sell") {

        const FarmPlot = document.getElementById(Plot);
        const crops = FarmPlot.children;

        for (let i = 0; i < crops.length; i++) {
          const crop = crops[i];
          crop.remove()
        }

        PlotInfo[2] = PlotInfo[2].replace("sell", "false");

let ReturningString = PlotInfo[0] + " " + PlotInfo[1] + " " + PlotInfo[2];
PlotData[PlotNumInList] = ReturningString;
      }


    }
  </script>
  
</body>

</html>
